% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_constant.R, R/is_increasing.R,
%   R/is_monotonic.R
\name{is_constant}
\alias{is_constant}
\alias{is.constant}
\alias{is_increasing}
\alias{is.increasing}
\alias{is_decreasing}
\alias{is.decreacing}
\alias{is_strictly_increasing}
\alias{is_strictly_decreasing}
\alias{is_monotonic}
\alias{is_strictly_monotonic}
\title{Monotonicity tests}
\usage{
is_constant(x, na.action = na.omit)

is.constant(...)

is_increasing(x, na.action = na.omit, zero.action = zero.pass)

is.increasing(...)

is_decreasing(x, na.action = na.omit, zero.action = zero.pass)

is.decreacing(...)

is_strictly_increasing(x, na.action = na.omit)

is_strictly_decreasing(x, na.action = na.omit)

is_monotonic(x, na.action = na.omit)

is_strictly_monotonic(x, na.action = na.omit)
}
\arguments{
\item{x}{numeric vector or one that can be coerced to one.}

\item{na.action}{function or NULL; action to perform on input to handle the
missing values}

\item{step}{integer; step-size for increment or NULL; See details.}
}
\value{
logical or NA
}
\description{
Test numeric vector for increasing, decreasing, strictly increasing, 
non-decreasing, non-increasing, constant properties
}
\details{
Instead of  using diff, \code{is_increasing} and \code{is_decreasing} uses 
\code{cummax} and \code{cummin} respectively for efficiency. See the 
stackoverflow reference for timings and an explanation.
}
\examples{
  
  is_constant( c(1,2,3) )
  is_constant( rep(3,5) )

  is_increasing( 1:10 )                  # TRUE
  is_increasing( c(1,2,1,3) )            # FALSE
  
  is_increasing( c(1,NA,2,3) )           # NA 
  is_increasing( c(1,NA,2,3), na.omit )  # TRUE

  is_monotonic( 1:5 )
  is_monotonic( -5:5 )
  is_monotonic( 5:-5 )
  
}
